"""
Модуль с шаблонами промптов и функциями для их формирования.
Позволяет унифицировать промпты во всем проекте.
"""

# Базовый шаблон для всех задач управления скважиной
BASE_PROMPT_TEMPLATE = """
Ты ДОЛЖЕН отвечать ИСКЛЮЧИТЕЛЬНО в формате <parameter>число</parameter>, где число от 0 до 1.

Примеры формата ответа:
<parameter>0.75</parameter>

ВАЖНО: Если формат не соблюден, действие будет ПРОИГНОРИРОВАНО!

Текущее состояние скважины:
{state}

Управление скважиной осуществляется через штуцер (клапан):
- 0 означает полностью закрытый штуцер (нет добычи)
- 1 означает полностью открытый штуцер (максимальный поток)

Награды:
{reward_info}

Параметр штуцера:
"""

# Шаблон для первого шага эпизода (с пояснениями)
FIRST_STEP_PROMPT_TEMPLATE = """
Ты ДОЛЖЕН отвечать ИСКЛЮЧИТЕЛЬНО в формате <parameter>число</parameter>, где число от 0 до 1.

Примеры ПРАВИЛЬНЫХ ответов:
<parameter>0.75</parameter>

Примеры НЕПРАВИЛЬНЫХ ответов:
0.75 (нет тегов parameter)

ВАЖНО: Если формат не соблюден, действие будет ПРОИГНОРИРОВАНО!

ЗАДАЧА: {task_description}
ТРЕБУЕТСЯ: Указать степень открытия штуцера от 0 до 1.

Состояние: {state}

Управление скважиной осуществляется через штуцер (клапан):
- 0 означает полностью закрытый штуцер (нет добычи)
- 1 означает полностью открытый штуцер (максимальный поток)

Параметр штуцера:
"""

# Шаблон для последующих шагов эпизода (с историей)
SUBSEQUENT_STEP_PROMPT_TEMPLATE = """
Ты ДОЛЖЕН отвечать ИСКЛЮЧИТЕЛЬНО в формате <parameter>число</parameter>, где число от 0 до 1.

Примеры ПРАВИЛЬНЫХ ответов:
<parameter>0.75</parameter>

Примеры НЕПРАВИЛЬНЫХ ответов:
0.75 (нет тегов parameter)

ВАЖНО: Если формат не соблюден, действие будет ПРОИГНОРИРОВАНО!

ЗАДАЧА: {task_description}
ТРЕБУЕТСЯ: Указать степень открытия штуцера от 0 до 1.

История: {history}

Состояние: {state}

Управление скважиной осуществляется через штуцер (клапан):
- 0 означает полностью закрытый штуцер (нет добычи)
- 1 означает полностью открытый штуцер (максимальный поток)

Параметр штуцера:
"""

# Новый шаблон с тегами reasoning для первого шага
REASONING_FIRST_STEP_TEMPLATE = """
Ты ДОЛЖЕН отвечать в следующем формате:
1. Сначала объясни своё размышление в теге <reasoning>твои размышления</reasoning>
   ВАЖНО: Размышления должны быть КОРОТКИМИ (до 50 слов)
2. Затем укажи параметр в теге <parameter>число</parameter>, где число от 0 до 1

Примеры ПРАВИЛЬНЫХ ответов:
<reasoning>Учитывая высокое давление в пласте и начальную стадию разработки, 
рационально использовать умеренный дебит для поддержания давления. 
Оптимальное открытие штуцера - около 0.5</reasoning>
<parameter>0.5</parameter>

ВАЖНО: Действие будет выполнено только при корректном формате тега <parameter>!
ВАЖНО: Излишне длинные размышления приведут к снижению награды!

ЗАДАЧА: {task_description}
ТРЕБУЕТСЯ: Указать степень открытия штуцера от 0 до 1.

Состояние: {state}

Управление скважиной осуществляется через штуцер (клапан):
- 0 означает полностью закрытый штуцер (нет добычи)
- 1 означает полностью открытый штуцер (максимальный поток)

Чтобы максимизировать общую добычу за весь период эксплуатации:
- В начале следует избегать слишком быстрого истощения пласта
- В середине нужно поддерживать оптимальный дебит
- В конце можно увеличить интенсивность добычи

Твои размышления и параметр:
"""

# Новый шаблон с тегами reasoning для последующих шагов
REASONING_SUBSEQUENT_STEP_TEMPLATE = """
Ты ДОЛЖЕН отвечать в следующем формате:
1. Сначала объясни своё размышление в теге <reasoning>твои размышления</reasoning>
   ВАЖНО: Размышления должны быть КОРОТКИМИ (до 50 слов)
2. Затем укажи параметр в теге <parameter>число</parameter>, где число от 0 до 1

Примеры ПРАВИЛЬНЫХ ответов:
<reasoning>Наблюдается падение давления в пласте. При текущем давлении продолжение 
добычи с тем же режимом приведёт к быстрому истощению. Стоит немного прикрыть штуцер.</reasoning>
<parameter>0.4</parameter>

ВАЖНО: Действие будет выполнено только при корректном формате тега <parameter>!
ВАЖНО: Излишне длинные размышления приведут к снижению награды!

ЗАДАЧА: {task_description}
ТРЕБУЕТСЯ: Указать степень открытия штуцера от 0 до 1.

История: {history}

Состояние: {state}

Управление скважиной осуществляется через штуцер (клапан):
- 0 означает полностью закрытый штуцер (нет добычи)
- 1 означает полностью открытый штуцер (максимальный поток)

Чтобы максимизировать общую добычу за весь период эксплуатации:
- В начале следует избегать слишком быстрого истощения пласта
- В середине нужно поддерживать оптимальный дебит
- В конце можно увеличить интенсивность добычи

Твои размышления и параметр:
"""

def get_single_well_prompt(state, reward_info=""):
    """
    Формирует промпт для симулятора с одной скважиной.
    
    Args:
        state (str): Форматированное состояние скважины
        reward_info (str): Информация о наградах
        
    Returns:
        str: Промпт для модели
    """
    return BASE_PROMPT_TEMPLATE.format(state=state, reward_info=reward_info)

def get_multi_well_prompt(state, reward_info=""):
    """
    Формирует промпт для симулятора с несколькими скважинами.
    
    Args:
        state (str): Форматированное состояние скважин
        reward_info (str): Информация о наградах
        
    Returns:
        str: Промпт для модели
    """
    return BASE_PROMPT_TEMPLATE.format(state=state, reward_info=reward_info)

def get_first_step_prompt(state, is_multi_well=False):
    """
    Формирует промпт для первого шага эпизода.
    
    Args:
        state (str): Форматированное состояние скважины
        is_multi_well (bool): Флаг, указывающий на тип симулятора
        
    Returns:
        str: Промпт для первого шага эпизода
    """
    task_description = "Управление добычей нефти в нескольких скважинах." if is_multi_well else "Управление добычей нефти в одной скважине."
    return FIRST_STEP_PROMPT_TEMPLATE.format(state=state, task_description=task_description)

def get_subsequent_step_prompt(state, history, is_multi_well=False):
    """
    Формирует промпт для последующих шагов эпизода.
    
    Args:
        state (str): Форматированное состояние скважины
        history (str): История предыдущих взаимодействий
        is_multi_well (bool): Флаг, указывающий на тип симулятора
        
    Returns:
        str: Промпт для последующих шагов эпизода
    """
    task_description = "Управление добычей нефти в нескольких скважинах." if is_multi_well else "Управление добычей нефти в одной скважине."
    return SUBSEQUENT_STEP_PROMPT_TEMPLATE.format(state=state, history=history, task_description=task_description)

def get_reasoning_first_step_prompt(state, is_multi_well=False):
    """
    Формирует промпт с тегами reasoning для первого шага эпизода.
    
    Args:
        state (str): Форматированное состояние скважины
        is_multi_well (bool): Флаг, указывающий на тип симулятора
        
    Returns:
        str: Промпт для первого шага эпизода с тегами reasoning
    """
    task_description = "Управление добычей нефти в нескольких скважинах." if is_multi_well else "Управление добычей нефти в одной скважине."
    return REASONING_FIRST_STEP_TEMPLATE.format(state=state, task_description=task_description)

def get_reasoning_subsequent_step_prompt(state, history, is_multi_well=False):
    """
    Формирует промпт с тегами reasoning для последующих шагов эпизода.
    
    Args:
        state (str): Форматированное состояние скважины
        history (str): История предыдущих взаимодействий
        is_multi_well (bool): Флаг, указывающий на тип симулятора
        
    Returns:
        str: Промпт для последующих шагов эпизода с тегами reasoning
    """
    task_description = "Управление добычей нефти в нескольких скважинах." if is_multi_well else "Управление добычей нефти в одной скважине."
    return REASONING_SUBSEQUENT_STEP_TEMPLATE.format(state=state, history=history, task_description=task_description) 