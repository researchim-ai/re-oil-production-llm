"""
Модуль с шаблонами промптов и функциями для их формирования.
Позволяет унифицировать промпты во всем проекте.
"""

# Базовый шаблон для всех задач управления скважиной
BASE_PROMPT_TEMPLATE = """
Ты ДОЛЖЕН отвечать ИСКЛЮЧИТЕЛЬНО ОДНИМ ЧИСЛОМ от 1 до 10.

Примеры формата ответа:
5
7
10

ВАЖНО: Если формат не соблюден, действие будет ПРОИГНОРИРОВАНО!

Текущее состояние скважины:
{state}

Управление скважиной осуществляется выбором одного из 10 вариантов открытия штуцера:
1 - открытие штуцера на 0.1 (10%)
2 - открытие штуцера на 0.2 (20%)
3 - открытие штуцера на 0.3 (30%)
4 - открытие штуцера на 0.4 (40%)
5 - открытие штуцера на 0.5 (50%)
6 - открытие штуцера на 0.6 (60%)
7 - открытие штуцера на 0.7 (70%)
8 - открытие штуцера на 0.8 (80%)
9 - открытие штуцера на 0.9 (90%)
10 - открытие штуцера на 1.0 (100%)

Награды:
{reward_info}

Выбранный вариант (от 1 до 10):
"""

# Шаблон для первого шага эпизода (с пояснениями)
FIRST_STEP_PROMPT_TEMPLATE = """
Ты ДОЛЖЕН отвечать ИСКЛЮЧИТЕЛЬНО ОДНИМ ЧИСЛОМ от 1 до 10.

Примеры ПРАВИЛЬНЫХ ответов:
5
1
10

Примеры НЕПРАВИЛЬНЫХ ответов:
"Выбираю вариант 5"
"7 (открытие на 70%)"

ВАЖНО: Если формат не соблюден, действие будет ПРОИГНОРИРОВАНО!

ЗАДАЧА: {task_description}
ТРЕБУЕТСЯ: Выбрать один из 10 вариантов открытия штуцера.

Состояние: {state}

Управление скважиной осуществляется выбором одного из 10 вариантов открытия штуцера:
1 - открытие штуцера на 0.1 (10%)
2 - открытие штуцера на 0.2 (20%)
3 - открытие штуцера на 0.3 (30%)
4 - открытие штуцера на 0.4 (40%)
5 - открытие штуцера на 0.5 (50%)
6 - открытие штуцера на 0.6 (60%)
7 - открытие штуцера на 0.7 (70%)
8 - открытие штуцера на 0.8 (80%)
9 - открытие штуцера на 0.9 (90%)
10 - открытие штуцера на 1.0 (100%)

Выбранный вариант (от 1 до 10):
"""

# Шаблон для последующих шагов эпизода (с историей)
SUBSEQUENT_STEP_PROMPT_TEMPLATE = """
Ты ДОЛЖЕН отвечать ИСКЛЮЧИТЕЛЬНО ОДНИМ ЧИСЛОМ от 1 до 10.

Примеры ПРАВИЛЬНЫХ ответов:
5
1
10

Примеры НЕПРАВИЛЬНЫХ ответов:
"Выбираю вариант 5"
"7 (открытие на 70%)"

ВАЖНО: Если формат не соблюден, действие будет ПРОИГНОРИРОВАНО!

ЗАДАЧА: {task_description}
ТРЕБУЕТСЯ: Выбрать один из 10 вариантов открытия штуцера.

История: {history}

Состояние: {state}

Управление скважиной осуществляется выбором одного из 10 вариантов открытия штуцера:
1 - открытие штуцера на 0.1 (10%)
2 - открытие штуцера на 0.2 (20%)
3 - открытие штуцера на 0.3 (30%)
4 - открытие штуцера на 0.4 (40%)
5 - открытие штуцера на 0.5 (50%)
6 - открытие штуцера на 0.6 (60%)
7 - открытие штуцера на 0.7 (70%)
8 - открытие штуцера на 0.8 (80%)
9 - открытие штуцера на 0.9 (90%)
10 - открытие штуцера на 1.0 (100%)

Выбранный вариант (от 1 до 10):
"""

def get_single_well_prompt(state, reward_info=""):
    """
    Формирует промпт для симулятора с одной скважиной.
    
    Args:
        state (str): Форматированное состояние скважины
        reward_info (str): Информация о наградах
        
    Returns:
        str: Промпт для модели
    """
    return BASE_PROMPT_TEMPLATE.format(state=state, reward_info=reward_info)

def get_multi_well_prompt(state, reward_info=""):
    """
    Формирует промпт для симулятора с несколькими скважинами.
    
    Args:
        state (str): Форматированное состояние скважин
        reward_info (str): Информация о наградах
        
    Returns:
        str: Промпт для модели
    """
    return BASE_PROMPT_TEMPLATE.format(state=state, reward_info=reward_info)

def get_first_step_prompt(state, is_multi_well=False):
    """
    Формирует промпт для первого шага эпизода.
    
    Args:
        state (str): Форматированное состояние скважины
        is_multi_well (bool): Флаг, указывающий на тип симулятора
        
    Returns:
        str: Промпт для первого шага эпизода
    """
    task_description = "Управление добычей нефти в нескольких скважинах." if is_multi_well else "Управление добычей нефти в одной скважине."
    return FIRST_STEP_PROMPT_TEMPLATE.format(state=state, task_description=task_description)

def get_subsequent_step_prompt(state, history, is_multi_well=False):
    """
    Формирует промпт для последующих шагов эпизода.
    
    Args:
        state (str): Форматированное состояние скважины
        history (str): История предыдущих взаимодействий
        is_multi_well (bool): Флаг, указывающий на тип симулятора
        
    Returns:
        str: Промпт для последующих шагов эпизода
    """
    task_description = "Управление добычей нефти в нескольких скважинах." if is_multi_well else "Управление добычей нефти в одной скважине."
    return SUBSEQUENT_STEP_PROMPT_TEMPLATE.format(state=state, history=history, task_description=task_description) 