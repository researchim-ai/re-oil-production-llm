"""
Модуль с шаблонами промптов и функциями для их формирования.
Позволяет унифицировать промпты во всем проекте.
"""

# Базовый шаблон для всех задач управления скважиной
BASE_PROMPT_TEMPLATE = """
Ты ДОЛЖЕН отвечать ИСКЛЮЧИТЕЛЬНО ОДНИМ ЧИСЛОМ от 0 до 1.

Примеры формата ответа:
1.0
0.75
0.5
0.25
0

ВАЖНО: Если формат не соблюден, действие будет ПРОИГНОРИРОВАНО!

Текущее состояние скважины:
{state}

Управление скважиной осуществляется через штуцер (клапан):
- 0 означает полностью закрытый штуцер (нет добычи)
- 1 означает полностью открытый штуцер (максимальный поток)

Награды:
{reward_info}

Параметр штуцера:
"""

# Шаблон для первого шага эпизода (с пояснениями)
FIRST_STEP_PROMPT_TEMPLATE = """
Ты ДОЛЖЕН отвечать ИСКЛЮЧИТЕЛЬНО ОДНИМ ЧИСЛОМ от 0 до 1.

Примеры ПРАВИЛЬНЫХ ответов:

Параметр штуцера:
0.75

Параметр штуцера:
0.4

Параметр штуцера:
1.0

ВАЖНО: Если формат не соблюден, действие будет ПРОИГНОРИРОВАНО!

ЗАДАЧА: {task_description}
ТРЕБУЕТСЯ: Указать степень открытия штуцера от 0 до 1.

Состояние: {state}

Управление скважиной осуществляется через штуцер (клапан):
- 0.0 означает полностью закрытый штуцер (нет добычи)
- 1.0 означает полностью открытый штуцер (максимальный поток)

Параметр штуцера:
"""

# Шаблон для последующих шагов эпизода (с историей)
SUBSEQUENT_STEP_PROMPT_TEMPLATE = """
Ты ДОЛЖЕН отвечать ИСКЛЮЧИТЕЛЬНО ОДНИМ ЧИСЛОМ от 0 до 1.

Параметр штуцера:
0.75

Параметр штуцера:
0.4

Параметр штуцера:
1.0

ВАЖНО: Если формат не соблюден, действие будет ПРОИГНОРИРОВАНО!

ЗАДАЧА: {task_description}
ТРЕБУЕТСЯ: Указать степень открытия штуцера от 0 до 1 (включительно).

======== ПОЛНАЯ ИСТОРИЯ ЭПИЗОДА ========
{history}
=========================================
Предыдущее действие (открытие штуцера): {previous_action}

Текущее состояние: {state}

Управление скважиной осуществляется через штуцер (клапан):
- 0 означает полностью закрытый штуцер (нет добычи)
- 1 означает полностью открытый штуцер (максимальный поток)

Параметр штуцера:
"""

def get_single_well_prompt(state, reward_info=""):
    """
    Формирует промпт для симулятора с одной скважиной.
    
    Args:
        state (str): Форматированное состояние скважины
        reward_info (str): Информация о наградах
        
    Returns:
        str: Промпт для модели
    """
    return BASE_PROMPT_TEMPLATE.format(state=state, reward_info=reward_info)

def get_multi_well_prompt(state, reward_info=""):
    """
    Формирует промпт для симулятора с несколькими скважинами.
    
    Args:
        state (str): Форматированное состояние скважин
        reward_info (str): Информация о наградах
        
    Returns:
        str: Промпт для модели
    """
    return BASE_PROMPT_TEMPLATE.format(state=state, reward_info=reward_info)

def get_first_step_prompt(state, is_multi_well=False):
    """
    Формирует промпт для первого шага эпизода.
    
    Args:
        state (str): Форматированное состояние скважины
        is_multi_well (bool): Флаг, указывающий на тип симулятора
        
    Returns:
        str: Промпт для первого шага эпизода
    """
    task_description = "Оптимизация управления добычей нефти в нескольких скважинах." if is_multi_well else "Оптимизация управления добычей нефти в одной скважине."
    return FIRST_STEP_PROMPT_TEMPLATE.format(state=state, task_description=task_description)

def get_subsequent_step_prompt(state, history, previous_action: str, is_multi_well=False):
    """
    Формирует промпт для последующих шагов эпизода.
    
    Args:
        state (str): Форматированное состояние скважины
        history (str): История предыдущих состояний
        previous_action (str): Значение действия, выбранного на предыдущем шаге
        is_multi_well (bool): Флаг, указывающий на тип симулятора
        
    Returns:
        str: Промпт для последующих шагов эпизода
    """
    task_description = "Оптимизация управления добычей нефти в нескольких скважинах." if is_multi_well else "Оптимизация управления добычей нефти в одной скважине."
    return SUBSEQUENT_STEP_PROMPT_TEMPLATE.format(state=state, history=history, previous_action=previous_action, task_description=task_description) 